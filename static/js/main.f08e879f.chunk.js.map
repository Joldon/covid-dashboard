{"version":3,"sources":["components/BarChart.js","components/MultiChart.js","components/LineChart.js","Dashboard.js","components/SideBar.js","App.js","reportWebVitals.js","index.js"],"names":["BarChart","id","options","chart","type","height","plotOptions","bar","borderRadius","horizontal","animations","enabled","easing","speed","animateGradually","delay","title","text","subtitle","dataLabels","xaxis","categories","colors","legend","show","showForSingleSeries","customLegendItems","markers","fillColors","series","name","data","x","y","goals","value","strokeWidth","strokeColor","MultiChart","stroke","width","enabledOnSeries","labels","yaxis","opposite","LineChart","dropShadow","color","top","left","blur","opacity","toolbar","curve","align","grid","borderColor","row","size","min","max","position","horizontalAlign","floating","offsetY","offsetX","annotations","label","style","background","Dashboard","useState","key","setKey","Tabs","activeKey","onSelect","k","className","selectedIndex","Tab","eventKey","SideBar","href","App","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAyMeA,EAtME,WA2Lb,OACI,qBAAKC,GAAG,WAAR,SACI,cAAC,IAAD,CACAC,QA/CU,CACdC,MAAO,CACLC,KAAM,MACNC,OAAQ,KAEVC,YAAa,CACXC,IAAK,CACHC,aAAc,EACdC,YAAY,GAEdC,WAAY,CACVC,SAAS,EACTC,OAAQ,YACRC,MAAO,IACPC,iBAAkB,CACdH,SAAS,EACTI,MAAO,OAIfC,MAAO,CACHC,KAAM,+BAEVC,SAAU,CACND,KAAM,mDAEVE,WAAY,CACVR,SAAS,GAEXS,MAAO,CACLC,WAAY,CAAC,KAAK,UAAU,QAAQ,SAAS,SAAS,OAAO,YAAY,KAAK,QAAQ,aAGxFC,OAAQ,CAAC,WACTC,OAAQ,CACJC,MAAM,EACNC,qBAAqB,EACrBC,kBAAmB,CAAC,eAAgB,mCACpCC,QAAS,CACPC,WAAY,CAAC,UAAW,cAS1BC,OA9LO,CACX,CACEC,KAAM,SACNC,KAAM,CACJ,CACEC,EAAG,KACHC,EAAG,MACHC,MAAO,CACL,CACEJ,KAAM,WACNK,MAAO,MACPC,YAAa,EACbC,YAAa,aAInB,CACEL,EAAG,SACHC,EAAG,KACHC,MAAO,CACL,CACEJ,KAAM,WACNK,MAAO,KACPC,YAAa,EACbC,YAAa,aAInB,CACEL,EAAG,QACHC,EAAG,MACHC,MAAO,CACL,CACEJ,KAAM,WACNK,MAAO,KACPC,YAAa,EACbC,YAAa,aAInB,CACEL,EAAG,SACHC,EAAG,KACHC,MAAO,CACL,CACEJ,KAAM,WACNK,MAAO,IACPC,YAAa,EACbC,YAAa,aAInB,CACEL,EAAG,SACHC,EAAG,MACHC,MAAO,CACL,CACEJ,KAAM,WACNK,MAAO,KACPC,YAAa,EACbC,YAAa,aAInB,CACEL,EAAG,OACHC,EAAG,IACHC,MAAO,CACL,CACEJ,KAAM,WACNK,MAAO,IACPC,YAAa,EACbC,YAAa,aAInB,CACIL,EAAG,YACHC,EAAG,MACHC,MAAO,CACL,CACEJ,KAAM,WACNK,MAAO,IACPC,YAAa,EACbC,YAAa,aAInB,CACEL,EAAG,KACHC,EAAG,MACHC,MAAO,CACL,CACEJ,KAAM,WACNK,MAAO,KACPC,YAAa,EACbC,YAAa,aAInB,CACEL,EAAG,QACHC,EAAG,MACHC,MAAO,CACL,CAEEC,MAAO,IACPC,YAAa,EACbC,YAAa,aAInB,CACEL,EAAG,WACHC,EAAG,MACHC,MAAO,CACL,CAEEC,MAAO,KACPC,YAAa,EACbC,YAAa,gBAuErBjC,KAAK,MACLC,OAAQ,SChILiC,EAjEI,WAoDf,OACI,qBAAKrC,GAAG,aAAR,SACI,cAAC,IAAD,CACIC,QA3CM,CACdC,MAAO,CACLE,OAAQ,IACRD,KAAM,QAERmC,OAAQ,CACNC,MAAO,CAAC,EAAG,IAEbxB,MAAO,CACLC,KAAM,0BAERE,WAAY,CACVR,SAAS,EACT8B,gBAAiB,CAAC,IAEpB/B,WAAY,CACRC,SAAS,EACTC,OAAQ,YACRC,MAAO,IACPC,iBAAkB,CACdH,SAAS,EACTI,MAAO,MAGf2B,OAAQ,GACRtB,MAAO,CACLC,WAAY,CAAC,KAAK,KAAK,SAAS,QAAQ,SAAS,SAAS,OAAO,YAAY,KAAK,QAAQ,WAAW,OAAO,SAAS,YAAY,UAAU,eAAe,QAAQ,UAAU,SAAS,SAAS,UAAU,cAAc,QAAQ,UAAU,UAAU,YAEpPsB,MAAO,CAAC,CACN3B,MAAO,CACLC,KAAM,gBAGP,CACD2B,UAAU,EACV5B,MAAO,CACLC,KAAM,yBAQFY,OAvDG,CAAC,CACZC,KAAM,cACN1B,KAAM,SACN2B,KAAM,CAAC,SAAS,SAAS,SAAS,SAAS,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAO,OAAO,UAChN,CACDD,KAAM,2BACN1B,KAAM,OACN2B,KAAM,CAAC,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,QAiDxH3B,KAAK,MACLC,OAAO,MACPmC,MAAM,WCuDPK,EAlHG,WA2Gd,OACI,8BACI,cAAC,IAAD,CAAgB3C,QAtFN,CACdC,MAAO,CACLE,OAAQ,IACRD,KAAM,OACN0C,WAAY,CACVnC,SAAS,EACToC,MAAO,OACPC,IAAK,GACLC,KAAM,EACNC,KAAM,GACNC,QAAS,IAEXC,QAAS,CACP5B,MAAM,GAERd,WAAY,CACVC,SAAS,EACTC,OAAQ,YACRC,MAAO,IACPC,iBAAkB,CACdH,SAAS,EACTI,MAAO,OAIfO,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,WACrDH,WAAY,CACVR,SAAS,GAEX4B,OAAQ,CACNc,MAAO,UAETrC,MAAO,CACLC,KAAM,2BACNqC,MAAO,QAETC,KAAM,CACJC,YAAa,UACbC,IAAK,CACHnC,OAAQ,CAAC,UAAW,eACpB6B,QAAS,KAGbxB,QAAS,CACP+B,KAAM,GAERtC,MAAO,CACLC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACnFL,MAAO,CACLC,KAAM,UAIV0B,MAAO,CACL3B,MAAO,CACLC,KAAM,oCAER0C,IAAK,GACLC,IAAK,KAEPrC,OAAQ,CACNsC,SAAU,MACVC,gBAAiB,QACjBC,UAAU,EACVC,SAAU,GACVC,SAAU,GAEZC,YAAa,CACT9C,MAAO,CACL,CACEY,EAAG,MACHwB,YAAa,UACbW,MAAO,CACLX,YAAa,UACbY,MAAO,CACLrB,MAAO,OACPsB,WAAY,WAEdpD,KAAM,8BAQsBY,OA5G3B,CACX,CACEC,KAAM,KACNC,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAE3D,CACED,KAAM,SACNC,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAE3D,CACED,KAAM,QACNC,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAE3D,CACED,KAAM,SACNC,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAE3D,CACED,KAAM,SACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAyFD3B,KAAK,OAAOC,OAAQ,SChFnEiE,MAvBf,WACI,MAAsBC,mBAAS,aAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAEA,OACE,eAACC,EAAA,EAAD,CACEzE,GAAG,yBACH0E,UAAWH,EACXI,SAAU,SAACC,GAAD,OAAOJ,EAAOI,IACxBC,UAAU,OACVC,cAAe,EALjB,UAOE,cAACC,EAAA,EAAD,CAAKC,SAAS,WAAWjE,MAAM,WAA/B,SACE,cAAC,EAAD,MAEF,cAACgE,EAAA,EAAD,CAAKC,SAAS,aAAajE,MAAM,aAAjC,SACE,cAAC,EAAD,MAEF,cAACgE,EAAA,EAAD,CAAKC,SAAS,YAAYjE,MAAM,YAAhC,SACE,cAAC,EAAD,UCLKkE,EApBC,WACZ,OACI,gCACE,mDACA,+BACI,6BAAI,mBAAGC,KAAK,oFAAR,qCACJ,6BAAI,mBAAGA,KAAK,6CAAR,gCACJ,6BAAI,mBAAGA,KAAK,gDAAR,mDACJ,6BAAI,mBAAGA,KAAK,uCAAR,+CACJ,6BAAI,mBAAGA,KAAK,uCAAR,0CACJ,6BAAI,mBAAGA,KAAK,8DAAR,2CACJ,6BAAI,mBAAGA,KAAK,uEAAR,oDACJ,6BAAI,mBAAGA,KAAK,oFAAR,2CACJ,6BAAI,mBAAGA,KAAK,+FAAR,6CACJ,6BAAI,mBAAGA,KAAK,kGAAR,wC,MCWHC,MArBf,WACE,OACE,sBAAKN,UAAU,YAAf,UACE,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,YAAf,UACE,qBAAKO,MAAM,SAEX,qBAAKA,MAAM,SAEX,qBAAKA,MAAM,SAEX,qBAAKP,UAAU,OAAf,SACE,cAAC,EAAD,aCRKQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f08e879f.chunk.js","sourcesContent":["import React from 'react'\nimport ReactApexChart from 'react-apexcharts'\n\nconst BarChart = () => {\n    const series = [\n        {\n          name: 'Deaths',\n          data: [\n            {\n              x: 'US',\n              y: 757000,\n              goals: [\n                {\n                  name: 'Lockdown',\n                  value: 433000,\n                  strokeWidth: 5,\n                  strokeColor: '#775DD0'\n                }\n              ]\n            },\n            {\n              x: 'Brasil',\n              y: 610000,\n              goals: [\n                {\n                  name: 'Lockdown',\n                  value: 540000,\n                  strokeWidth: 5,\n                  strokeColor: '#775DD0'\n                }\n              ]\n            },\n            {\n              x: 'India',\n              y: 462000,\n              goals: [\n                {\n                  name: 'Lockdown',\n                  value: 520000,\n                  strokeWidth: 5,\n                  strokeColor: '#775DD0'\n                }\n              ]\n            },\n            {\n              x: 'Mexico',\n              y: 290000,\n              goals: [\n                {\n                  name: 'Lockdown',\n                  value: 200000,\n                  strokeWidth: 5,\n                  strokeColor: '#775DD0'\n                }\n              ]\n            },\n            {\n              x: 'Russia',\n              y: 245000,\n              goals: [\n                {\n                  name: 'Lockdown',\n                  value: 230000,\n                  strokeWidth: 5,\n                  strokeColor: '#775DD0'\n                }\n              ]\n            },\n            {\n              x: 'Peru',\n              y: 200000,\n              goals: [\n                {\n                  name: 'Lockdown',\n                  value: 200000,\n                  strokeWidth: 5,\n                  strokeColor: '#775DD0'\n                }\n              ]\n            },\n            {\n                x: 'Indonesia',\n                y: 143000,\n                goals: [\n                  {\n                    name: 'Lockdown',\n                    value: 90000,\n                    strokeWidth: 5,\n                    strokeColor: '#775DD0'\n                  }\n                ]\n              },\n              {\n                x: 'UK',\n                y: 142000,\n                goals: [\n                  {\n                    name: 'Lockdown',\n                    value: 140000,\n                    strokeWidth: 5,\n                    strokeColor: '#775DD0'\n                  }\n                ]\n              },\n              {\n                x: 'Italy',\n                y: 132000,\n                goals: [\n                  {\n                    // name: 'Expected',\n                    value: 70000,\n                    strokeWidth: 5,\n                    strokeColor: '#775DD0'\n                  }\n                ]\n              },\n              {\n                x: 'Colombia',\n                y: 127000,\n                goals: [\n                  {\n                    // name: 'Expected',\n                    value: 23000,\n                    strokeWidth: 5,\n                    strokeColor: '#775DD0'\n                  }\n                ]\n              }\n              \n          ]\n        }\n      ]\n\n    // const series = [{\n    //     name: 'Covid cases (in thousands)',\n    //     data: [46693,\n    //         21897,\n    //         34388,\n    //         3831,\n    //         8727,\n    //         2207,\n    //         4248,\n    //         9412,\n    //         4818,\n    //         5019]\n    //   }]\n      const options = {\n        chart: {\n          type: 'bar',\n          height: 350\n        },\n        plotOptions: {\n          bar: {\n            borderRadius: 4,\n            horizontal: true,\n          },\n          animations: {\n            enabled: true,\n            easing: 'easeinout',\n            speed: 800,\n            animateGradually: {\n                enabled: true,\n                delay: 150\n            }\n          }\n        },\n        title: {\n            text: 'Ten Most Affected Countries'\n          },\n        subtitle: {\n            text: 'Covid deaths and lockdown decisions per country'\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          categories: [\"US\",\"Brazil \",\"India\",\"Mexico\",\"Russia\",\"Peru\",\"Indonesia\",\"UK\",\"Italy\",\"Colombia\"\n          ],\n        },\n        colors: ['#00E396'],\n        legend: {\n            show: true,\n            showForSingleSeries: true,\n            customLegendItems: ['Covid Deaths', 'Threshold Decision for Lockdown'],\n            markers: {\n              fillColors: ['#00E396', '#775DD0']\n            }\n        }\n      }\n    \n    return (\n        <div id='barchart'>\n            <ReactApexChart \n            options={options} \n            series={series} \n            type=\"bar\" \n            height={350} />\n        </div>\n    )\n}\n\nexport default BarChart\n","import React from 'react'\nimport ReactApexChart from 'react-apexcharts'\n\nconst MultiChart = () => {\n    const series = [{\n        name: 'Covid cases',\n        type: 'column',\n        data: [41523320,46693111,21897025,34388579,3831259,8727817,2207890,4248843,9412185,4818705,5019158,6004460,7334332,5299418,4857463,2924317,5032056,3253327,3125179,8290135,1718726,2806694,1713188,519560,914586,1828440]\n      }, {\n        name: 'Covid deaths per million',\n        type: 'line',\n        data: [1812,2274,2849,331,2227,1676,6009,519,2090,2194,2489,1500,1760,2547,1155,1488,1873,1794,2063,852,2691,401,1971,1844,3271,2906]\n      }]\n    \n\n      const options = {\n        chart: {\n          height: 350,\n          type: 'line',\n        },\n        stroke: {\n          width: [0, 4]\n        },\n        title: {\n          text: 'Global Covid Statistcs'\n        },\n        dataLabels: {\n          enabled: true,\n          enabledOnSeries: [1]\n        },\n        animations: {\n            enabled: true,\n            easing: 'easeinout',\n            speed: 800,\n            animateGradually: {\n                enabled: true,\n                delay: 200\n            }\n          },\n        labels: [],\n        xaxis: {\n          categories: [\"EU\",\"US\",\"Brazil\",\"India\",\"Mexico\",\"Russia\",\"Peru\",\"Indonesia\",\"UK\",\"Italy\",\"Colombia\",\"Iran\",\"France\",\"Argentina\",\"Germany\",\"South Africa\",\"Spain\",\"Ukraine\",\"Poland\",\"Turkey\",\"Romania\",\"Philippines\",\"Chile\",\"Ecuador\",\"Hungary\",\"Czechia\"]\n        },\n        yaxis: [{\n          title: {\n            text: 'Covid Cases',\n          },\n        \n        }, {\n          opposite: true,\n          title: {\n            text: 'Deaths per Million'\n          }\n        }]\n      }\n    return (\n        <div id='multichart'>\n            <ReactApexChart \n                options={options} \n                series={series} \n                type=\"bar\" \n                height='450'\n                width='90%'\n             />\n        </div>\n    )\n}\n\nexport default MultiChart\n","import React from 'react'\nimport ReactApexChart from 'react-apexcharts'\n\nconst LineChart = () => {\n    const series = [\n        {\n          name: \"US\",\n          data: [366, 469, 529, 558, 577, 592, 601, 610, 643, 696, 739]\n        },\n        {\n          name: \"Brasil\",\n          data: [193, 223, 254, 317, 401, 461, 515, 555, 579, 596, 607]\n        },\n        {\n          name: \"India\",\n          data: [148, 154, 157, 162, 211, 331, 399, 424, 439, 448, 458]\n        },\n        {\n          name: \"Mexico\",\n          data: [148, 186, 210, 223, 230, 234, 237, 245, 266, 281, 288]\n        },\n        {\n          name: \"Russia\",\n          data: [57, 73, 86, 99, 110, 121, 135, 159, 184, 208, 239]\n        }\n      ]\n      const options = {\n        chart: {\n          height: 350,\n          type: 'line',\n          dropShadow: {\n            enabled: true,\n            color: '#000',\n            top: 18,\n            left: 7,\n            blur: 10,\n            opacity: 0.2\n          },\n          toolbar: {\n            show: false\n          },\n          animations: {\n            enabled: true,\n            easing: 'easeinout',\n            speed: 800,\n            animateGradually: {\n                enabled: true,\n                delay: 200\n            }\n          }\n        },\n        colors: ['#77B6EA', '#545454', '#DE3163', '#FFBF00', '#FF7F50'],\n        dataLabels: {\n          enabled: true,\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        title: {\n          text: 'Cumulative COVID deaths ',\n          align: 'left'\n        },\n        grid: {\n          borderColor: '#e7e7e7',\n          row: {\n            colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n            opacity: 0.5\n          },\n        },\n        markers: {\n          size: 1\n        },\n        xaxis: {\n          categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov'],\n          title: {\n            text: 'Month'\n          },\n          \n        },\n        yaxis: {\n          title: {\n            text: 'cumulative deaths (in thousands)'\n          },\n          min: 60,\n          max: 800\n        },\n        legend: {\n          position: 'top',\n          horizontalAlign: 'right',\n          floating: true,\n          offsetY: -25,\n          offsetX: -5\n        },\n        annotations: {\n            xaxis: [\n              {\n                x: 'Mar',\n                borderColor: '#664411',\n                label: {\n                  borderColor: '#0b0b0b',\n                  style: {\n                    color: '#fff',\n                    background: '#664411'\n                  },\n                  text: 'Onset of Delta variant'\n                }\n              }\n            ]\n          },\n      }\n    return (\n        <div>\n            <ReactApexChart options={options} series={series} type=\"line\" height={350} />\n        </div>\n    )\n}\n\nexport default LineChart\n","import React, { useState} from 'react';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport BarChart from './components/BarChart';\n\nimport MultiChart from './components/MultiChart';\nimport LineChart from './components/LineChart';\n\n\nfunction Dashboard() {\n    const [key, setKey] = useState('LineChart');\n  \n    return (\n      <Tabs\n        id=\"controlled-tab-example\"\n        activeKey={key}\n        onSelect={(k) => setKey(k)}\n        className=\"mb-3\"\n        selectedIndex={1}\n      >\n        <Tab eventKey=\"BarChart\" title=\"BarChart\">\n          <BarChart />\n        </Tab>\n        <Tab eventKey=\"MultiChart\" title=\"MultiChart\">\n          <MultiChart />\n        </Tab>\n        <Tab eventKey=\"LineChart\" title=\"LineChart\">\n          <LineChart />\n        </Tab>\n      </Tabs>\n    );\n  }\nexport default Dashboard  ","import React from 'react'\n\nconst SideBar = () => {\n    return (\n        <div>\n          <h5>Covid Information</h5>\n          <ul>\n              <li><a href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019/situation-reports\">WHO Situation Reports</a></li>\n              <li><a href=\"https://www.who.int/news-room/news-updates\">WHO News Updates</a></li>\n              <li><a href=\"https://www.rki.de/DE/Home/homepage_node.html\">Robert Koch Institutes's Covid Page</a></li>\n              <li><a href=\"https://coronavirus.jhu.edu/map.html\">John Hopkins COVID-19 Dashboard</a></li>\n              <li><a href=\"https://coronavirus.jhu.edu/vaccines\">Information about vaccines</a></li>\n              <li><a href=\"https://www.afro.who.int/health-topics/coronavirus-covid-19\">Covid information on Africa</a></li>\n              <li><a href=\"https://www.who.int/southeastasia/outbreaks-and-emergencies/covid-19\">Covid information on South-East Asia</a></li>\n              <li><a href=\"https://www.euro.who.int/en/health-topics/health-emergencies/coronavirus-covid-19\">Covid information on Europe</a></li>\n              <li><a href=\"https://reliefweb.int/report/colombia/americas-covid-19-response-update-31-24-september-2021\">Covid information on Americas</a></li>\n              <li><a href=\"https://graphics.reuters.com/world-coronavirus-tracker-and-maps/vaccination-rollout-and-access/\">Vaccination rates</a></li>\n          </ul>\n        </div>\n    )\n}\n\nexport default SideBar\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Dashboard from './Dashboard';\nimport SideBar from './components/SideBar'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className='sidebar'>\n        <SideBar />\n      </div>\n      <div className='dashboard'>\n        <div class=\"item\">\n        </div>\n        <div class=\"item\">\n        </div>\n        <div class=\"item\">\n        </div>\n        <div className='tabs'>\n          <Dashboard />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}